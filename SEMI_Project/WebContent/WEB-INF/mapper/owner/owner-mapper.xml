<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	
	<entry key="modifyPictures">
		  UPDATE PICTURE P
		    SET P.ORIGIN_NAME = ?,
		        P.UPLOAD_DATE = SYSDATE
		        P.REVISED_NAME = ?,
		        P.ROUTE = ?
          WHERE P.PICTURE_CODE = (SELECT MAX(S.PICTURE_CODE)
                                    FROM STORE_PIC_TABLE S
                                   WHERE S.STORE_CODE = ?);
	</entry>
	<entry key="modifyPictures2">
		  UPDATE PICTURE P
		    SET P.ORIGIN_NAME = ?,
		        P.UPLOAD_DATE = SYSDATE,
		        P.REVISED_NAME = ?,
		        P.ROUTE = ?
          WHERE P.PICTURE_CODE = (SELECT MAX(S.PICTURE_CODE)-1
                                    FROM STORE_PIC_TABLE S
                                   WHERE S.STORE_CODE = ?);
	</entry>
	<!-- <entry key="modifyBISIPictures">
		 UPDATE PICTURE P
				    SET P.ORIGIN_NAME = ?,
				        P.REVISED_NAME = ?,
				        P.ROUTE = ?,
				        P.UPLOAD_DATE = SYSDATE
				  WHERE PICTURE_CODE = (SELECT
			                              PICTURE_CODE -1
			                         FROM LICENSE_MANAGE L
			                        WHERE L.STORE_ADDRESS = ?);
	</entry> -->
	<!-- <entry key="modifyStorePictures">
		 UPDATE PICTURE P
   SET P.ORIGIN_NAME = ?,
       P.REVISED_NAME = ?,
       P.ROUTE = ?,
       P.UPLOAD_DATE = SYSDATE
 WHERE PICTURE_CODE = (SELECT
                              PICTURE_CODE
                         FROM LICENSE_MANAGE L
                        WHERE L.STORE_ADDRESS = ?);
	</entry> -->
	<entry key="modifyLicenseManager">
	UPDATE LICENSE_MANAGE L
	   SET L.STORE_NAME = ?,
		   L.BISI_DIV = ?,
		   L.OPEN_DATE = ?,
		   L.STORE_ADDRESS = ?,
		   L.COMPANY = ?,
		   L.ITEM = ?,
		   L.MAIN_ADDRESS = ?,
		   L.LIC_DATE = ?,
		   L.BISI_CODE = ?
	)
	</entry>
	<entry key="modifyOwner">
		UPDATE USER_TABLE U
	  	   SET U.USER_PWD = ?,
	  	   	   U.USER_PHONE = ?,
			   U.USER_ADDRESS = ?,
			   U.USER_EMAIL = ?,
			   U.ROLE_CODE = ?
	</entry>
	<entry key="modifyStore">
	UPDATE STORE_TABLE S
	   SET S.STORE_NAME = ?,
		   S.STORE_XY = ?,
		   S.CATEGORY = ?,
		   S.ENROLL_DATE = SYSDATE,
		   S.TYPE_CODE = ?,
		   S.STORE_ADDR = ?,
		   S.STORE_INFO = ?
	</entry>
	
	
	
	<!-- ===================================== -->
	
	<entry key="BeforeModifyInfo">
		SELECT
			   U.USER_ID,
			   U.USER_NAME,
			   S.OWNER_NO
		  FROM USER_TABLE U
		  JOIN STORE_TABLE S ON(U.USER_CODE = S.USER_CODE)
		 WHERE U.USER_ID = ?
	</entry>
	
	<entry key="registPictures">
	INSERT
	  INTO PICTURE
	VALUES
	(
	  SEQ_PICTURE.NEXTVAL
	, SYSDATE
	, 'N'
	, ?
	, ?
	, ?
	)
	</entry>
	
	<entry key="registLicenseManager">
	INSERT
	  INTO LICENSE_MANAGE
	VALUES
	(
	  ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, SEQ_LMANAGER.NEXTVAL
	, SEQ_PICTURE.CURRVAL
	)
	</entry>
	<entry key="registOwner">
	INSERT
	  INTO USER_TABLE
	  VALUES
	  (  
	    SEQ_USER.NEXTVAL
	  , ?
	  , ?
	  , ?
	  , ?
	  , ?
	  , DEFAULT
	  , ?
	  , 'N'
	  , '2'
	  , 'N'
	  , NULL
	  , ?
	  )
	</entry>
	<entry key="registStore">
	INSERT
	  INTO STORE_TABLE
	VALUES
	(
	  ?
	, ?
	, ?
	, ?
	, SEQ_USER.CURRVAL
	, SEQ_LMANAGER.CURRVAL
	, SEQ_STORE.NEXTVAL
	, 'N'
	, SYSDATE
	, ?
	, ?
	, ?
	)
	</entry>
	<entry key="registPICtable">
	INSERT
	  INTO STORE_PIC_TABLE
	VALUES
	(
	  SEQ_PICTURE.CURRVAL
	, SEQ_STORE.CURRVAL
	)
	</entry>
	<entry key="registPICtable2">
	INSERT
	  INTO STORE_PIC_TABLE
	VALUES
	(
	  SEQ_PICTURE.CURRVAL-1
	, SEQ_STORE.CURRVAL
	)
	</entry>
	<entry key="selectEncryptedPwd">
		SELECT 
		  	   U.USER_PWD
	 	  FROM USER_TABLE U
	 	 WHERE U.WITHDRAW_YN = 'N'
	 	   AND U.USER_ID = ?
	</entry>
	<!-- 로그인시 세션에 넣어줄 값들 -->
	<entry key="selectLoginOwner">
		SELECT
			   U.USER_CODE
			 , U.USER_ID
			 , U.USER_NAME
			 , U.USER_PHONE
			 , U.USER_ADDRESS
			 , U.POINT
			 , U.USER_EMAIL
			 , U.WITHDRAW_YN
			 , U.ROLE_CODE
			 , U.BLACKLIST_YN
			 , U.BLACKLIST_DATE
			 , U.USER_NO
		  FROM USER_TABLE U
		 WHERE U.WITHDRAW_YN = 'N'
	 	   AND U.USER_ID = ?
	</entry>
	<entry key="selectLoginStore">
		SELECT
       	 	   S.STORE_NAME,
		       S.OWNER_NO,
		       S.STORE_XY,
		       S.CATEGORY,
		       S.USER_CODE,
		       S.BUSINESS_REGIST_CODE,
		       S.STORE_CODE,
		       S.APPROVAL,
		       S.ENROLL_DATE,
		       S.TYPE_CODE,
		       S.STORE_ADDR,
		       S.STORE_INFO
 		  FROM STORE_TABLE S
		 WHERE S.USER_CODE = (SELECT U.USER_CODE
                     		    FROM USER_TABLE U
                    		   WHERE U.USER_ID = ?)
	</entry>
	<entry key="selectLoginLicenseManage">
		SELECT
			   L.STORE_NAME,
			   L.BISI_DIV,
			   L.OPEN_DATE,
			   L.STORE_ADDRESS,
			   L.COMPANY,
			   L.ITEM,
			   L.MAIN_ADDRESS,
			   L.LIC_DATE,
			   L.BISI_CODE,
			   L.PICTURE_CODE
		  FROM LICENSE_MANAGE L
		  JOIN STORE_PIC_TABLE P ON(L.PICTURE_CODE = P.PICTURE_CODE)
		  JOIN STORE_TABLE S ON(P.STORE_CODE = S.STORE_CODE)
		  JOIN USER_TABLE U ON(S.USER_CODE = U.USER_CODE)
		 WHERE USER_ID = ?
	</entry>
	<entry key="checkId">
		SELECT
			   U.USER_ID
		  FROM USER_TABLE U
		 WHERE U.USER_ID = ?	
	</entry>
	<entry key="selectAllMenuList">
	SELECT
	       *
	  FROM MENU
	</entry>
		<entry key="insertNewMenu">
		INSERT
		  INTO MENU
		VALUES
		(
		  SEQ_MENU_CODE.NEXTVAL
		, ?
		, ?
		, ?
		, ?
		, ?
		, ?
		)
	</entry>
	
	<entry key="insertPicture">
	    INSERT
	      INTO PICTURE
	    VALUES
	    (
	     SEQ_PICTURE_CODE.NEXTVAL
	   , SYSDATE
	   , DEFAULT
	   , ?
	   , ?
	   , ?
	    )
	</entry>
	
	<entry key="selectPictureSequence">
	    SELECT
	           SEQ_PICTURE_CODE.CURRVAL
	      FROM DUAL
	</entry>
	
	<entry key="selectDailySales">
	    SELECT * 
	      FROM ORDER_TABLE   
	     WHERE EXTRACT(MONTH FROM (ORDER_TIME))=?
	    ORDER BY ORDER_TIME

	</entry>
	
	<entry key="selectAllSales">
	    SELECT *
	      FROM ORDER_TABLE
	     ORDER BY ORDER_TIME
	
	</entry>
	
	<entry key="selectMonthlySales">
	    SELECT
               EXTRACT(MONTH FROM (ORDER_TIME)) as "MONTH"
             , count(ORDER_CODE) as "COUNT"
             , sum(TOTAL_AMOUNT) as "TOTAL"
          FROM ORDER_TABLE
         GROUP BY EXTRACT(MONTH FROM (ORDER_TIME))
         ORDER BY EXTRACT(MONTH FROM (ORDER_TIME))
	
	</entry>
	
	<entry key = "selectAllSuggestion">
	
		SELECT
		       *
		  FROM OWNER_INQUIRY
	
	</entry>
	
	<entry key="InsertSuggestion">
	     INSERT
	       INTO OWNER_INQUIRY
	     (
	       BOARD_CODE
	     , BOARD_TITLE
	     , BOARD_DATE
	     , BOARD_CONTENT
	     , VISIBLE_YN
	     , OWNER_CODE
	     
	     )
	     VALUES
	     (
	       SEQ_SUGGESTION_NO.NEXTVAL
	      , ?
	      , SYSDATE
	      , ?
	      , 'N'
	      , 1
	     )
	     
	       
	</entry>
	
	<entry key="SuggestionDetail">
	        SELECT
                    B.BOARD_TITLE as "boardTitle"
                  , B.BOARD_CONTENT as "boardContent"
                  , B.BOARD_DATE as "boardDate"
                  , M.REPLY_CONTENT as "replyContent"
                  , M.REPLY_DATE  as "replyDate"
                  , U.USER_NAME as "userName"
                    FROM STORE_REPLY_BOARD A
                    JOIN OWNER_INQUIRY B ON (A.BOARD_CODE =B.BOARD_CODE)
                    JOIN OWNER_REPLY_MANAGE M ON(A.REPLY_CODE = M.REPLY_CODE)
                    JOIN USER_TABLE U ON(B.OWNER_CODE = U.USER_CODE)
                    WHERE A.BOARD_CODE =?
	</entry>
	
	<entry key="selectTotalCount">
		    
		select
	    count(*)
	    from order_table a
	    join store_table c on(a.store_code = c.store_code)
	    join user_table d on(c.user_code = d.user_code)
	    where d.user_code =?
	</entry>
	
	<entry key="selectOrderList">
	SELECT
    A.RNUM,
    a.order_code,
    A.user_id,
    a.order_time,
    a.ORDER_PROCEED,
    a.TOTAL_AMOUNT
	    FROM (SELECT ROWNUM RNUM,
                        B.order_code,
                        B.user_id,
                        B.order_time,
                        B.ORDER_PROCEED,
                        B.TOTAL_AMOUNT
                        FROM(SELECT  
                                    C.order_code,
                                    D.user_id,
                                    C.order_time,
                                    C.ORDER_PROCEED,
                                    C.TOTAL_AMOUNT
                                        from order_table C
                                        join user_table D on(C.user_code = D.user_code)
                                        join store_table E on(C.store_code = E.store_code)
                                        join user_table F on(E.user_code = F.user_code)
                                        where F.user_code = ?
                                        ORDER BY C.ORDER_CODE DESC
                            )B
                )A
        WHERE A.RNUM BETWEEN ? AND ?
	</entry>
</properties>